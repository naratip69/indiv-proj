[{"/home/naratip74/odin-project/indiv/client/src/index.js":"1","/home/naratip74/odin-project/indiv/client/src/reportWebVitals.js":"2","/home/naratip74/odin-project/indiv/client/src/component/StudentsList.js":"3","/home/naratip74/odin-project/indiv/client/src/component/AdvisorsList.js":"4","/home/naratip74/odin-project/indiv/client/src/component/RouteSwitch.js":"5","/home/naratip74/odin-project/indiv/client/src/component/Sidebar.js":"6","/home/naratip74/odin-project/indiv/client/src/component/StudentDetail.js":"7","/home/naratip74/odin-project/indiv/client/src/component/AdvisorDetail.js":"8","/home/naratip74/odin-project/indiv/client/src/component/StudentForm.js":"9","/home/naratip74/odin-project/indiv/client/src/component/AdvisorForm.js":"10","/home/naratip74/odin-project/indiv/client/src/component/PublicationForm.js":"11","/home/naratip74/odin-project/indiv/client/src/component/Stat.js":"12","/home/naratip74/odin-project/indiv/client/src/component/Chart.js":"13"},{"size":675,"mtime":1690791942072,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1690417821500,"results":"16","hashOfConfig":"15"},{"size":2849,"mtime":1690885217875,"results":"17","hashOfConfig":"15"},{"size":1036,"mtime":1690805671681,"results":"18","hashOfConfig":"15"},{"size":1411,"mtime":1690907400134,"results":"19","hashOfConfig":"15"},{"size":1023,"mtime":1690908139797,"results":"20","hashOfConfig":"15"},{"size":4353,"mtime":1690901002144,"results":"21","hashOfConfig":"15"},{"size":2864,"mtime":1690885058768,"results":"22","hashOfConfig":"15"},{"size":6279,"mtime":1690885208515,"results":"23","hashOfConfig":"15"},{"size":3630,"mtime":1690884194409,"results":"24","hashOfConfig":"15"},{"size":1665,"mtime":1690909575220,"results":"25","hashOfConfig":"15"},{"size":1415,"mtime":1690908280585,"results":"26","hashOfConfig":"15"},{"size":343,"mtime":1690959746992,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},"3cmnta",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"32"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/naratip74/odin-project/indiv/client/src/index.js",["75","76"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport StudentsList from \"./component/StudentsList\";\nimport AdvisorList from \"./component/AdvisorsList\";\nimport RouteSwitch from \"./component/RouteSwitch\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <RouteSwitch />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"/home/naratip74/odin-project/indiv/client/src/reportWebVitals.js",[],[],"/home/naratip74/odin-project/indiv/client/src/component/StudentsList.js",[],[],"/home/naratip74/odin-project/indiv/client/src/component/AdvisorsList.js",[],[],"/home/naratip74/odin-project/indiv/client/src/component/RouteSwitch.js",[],[],"/home/naratip74/odin-project/indiv/client/src/component/Sidebar.js",[],[],"/home/naratip74/odin-project/indiv/client/src/component/StudentDetail.js",["77"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport \"../styles/StudentInfo.css\";\n\nimport PublicationForm from \"./PublicationForm\";\n\nexport default function StudentDetail() {\n  const [studentDetail, setStudentDetail] = useState({});\n  const [isOpen, setOpen] = useState(false);\n  const [publications, setPublications] = useState([]);\n  const { id } = useParams();\n  const URL = \"http://localhost:5000\";\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      // console.log(id);\n      const res = await fetch(`${URL}/student/${id}`);\n      // console.log(res);\n      if (res.ok) {\n        const data = await res.json();\n        // console.log(data);\n        setStudentDetail(data);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (studentDetail) {\n      setPublications(studentDetail.publications);\n    }\n  }, [studentDetail]);\n\n  async function onDelete(e) {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${URL}/student/${id}/delete`, {\n        method: \"POST\",\n      });\n      const data = await res.json();\n      if (data) navigate(\"/students\");\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function deletePublication(e, obj) {\n    e.preventDefault();\n    try {\n      const data = new URLSearchParams({ title: obj.title });\n      const res = await fetch(`${URL}/student/${id}/removePublication`, {\n        method: \"POST\",\n        body: data,\n      });\n      const resData = await res.json();\n      setPublications(resData);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <div className=\"student-info\">\n      <div className=\"edit-delete\">\n        <h1>Student Info</h1>\n        <div className=\"butt-box\">\n          <button\n            className=\"edit\"\n            onClick={() => {\n              navigate(\"./update\");\n            }}\n          >\n            Edit\n          </button>\n          <button className=\"delete\" onClick={onDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"data\">\n          <h4>ID:</h4>\n          <p>{studentDetail.id ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Name:</h4>\n          <p>{studentDetail.name ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Email:</h4>\n          <p>{studentDetail.email ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Phone:</h4>\n          <p>{studentDetail.tel ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Academic year:</h4>\n          <p>{studentDetail.academic_year ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Year of study:</h4>\n          <p>{studentDetail.year_of_study ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Status:</h4>\n          <p>{studentDetail.status ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Adivsor:</h4>\n          <p>\n            {studentDetail.advisor ? (\n              <Link to={`../${studentDetail.advisor.url}`}>\n                {studentDetail.advisor.name}\n              </Link>\n            ) : (\n              \"-\"\n            )}\n          </p>\n        </div>\n      </div>\n      <div className=\"publications\">\n        <h4>Publications:</h4>\n        <div className=\"add-publication\">\n          {isOpen ? (\n            <PublicationForm setPublications={setPublications} />\n          ) : null}\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              setOpen((e) => !e);\n            }}\n            className={isOpen ? \"open\" : null}\n          >\n            {isOpen ? \"x\" : \"+\"}\n          </button>\n        </div>\n        {publications ? (\n          <table>\n            {publications.map((e) => {\n              return (\n                <div className=\"row\">\n                  <a href={e.url}>{e.title}</a>\n                  <button\n                    className=\"row-button\"\n                    onClick={(x) => {\n                      deletePublication(x, e);\n                    }}\n                  >\n                    x\n                  </button>\n                </div>\n              );\n            })}\n          </table>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","/home/naratip74/odin-project/indiv/client/src/component/AdvisorDetail.js",["78"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default function AdvisorDetail() {\n  const [advisorDetail, setAdvisorDetail] = useState({});\n  const [students, setStudents] = useState([]);\n  const { id } = useParams();\n  const URL = \"http://localhost:5000\";\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(`${URL}/advisor/${id}`);\n      if (res.ok) {\n        const data = await res.json();\n        setAdvisorDetail(data.advisor);\n        // console.log(data.students);\n        setStudents(data.students);\n        // console.log(students);\n      }\n    }\n    fetchData();\n  }, []);\n\n  async function onDelete(e) {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${URL}/advisor/${id}/delete`, {\n        method: \"POST\",\n      });\n      const data = await res.json();\n      // console.log(data);\n      if (data) navigate(\"/advisors\");\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <div className=\"advisor-info\">\n      <div className=\"edit-delete\">\n        <h1>Advisor Info</h1>\n        <div className=\"butt-box\">\n          <button\n            className=\"edit\"\n            onClick={() => {\n              navigate(\"./update\");\n            }}\n          >\n            Edit\n          </button>\n          <button className=\"delete\" onClick={onDelete}>\n            Delete\n          </button>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"data\">\n          <h4>Name:</h4>\n          <p>{advisorDetail.name ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Email:</h4>\n          <p>{advisorDetail.email ?? \"-\"}</p>\n        </div>\n        <div className=\"data\">\n          <h4>Academic title:</h4>\n          <p>{advisorDetail.academic_title ?? \"-\"}</p>\n        </div>\n      </div>\n      <div className=\"students\">\n        <h4>Students in advised:</h4>\n        {students ? (\n          <table>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Academic year</th>\n              <th>Year of study</th>\n              <th>Email</th>\n              <th>Phone</th>\n              <th>Status</th>\n            </tr>\n            {students.map((e) => {\n              return (\n                <tr>\n                  <td>{<Link to={`..${e.url}`}>{e.id}</Link> ?? \"-\"}</td>\n                  <td>{e.name ?? \"-\"}</td>\n                  <td>{e.academic_year ?? \"-\"}</td>\n                  <td>{e.year_of_study ?? \"-\"}</td>\n                  <td>{e.email ?? \"-\"}</td>\n                  <td>{e.tel ?? \"-\"}</td>\n                  <td>{e.status ?? \"-\"}</td>\n                </tr>\n              );\n            })}\n          </table>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","/home/naratip74/odin-project/indiv/client/src/component/StudentForm.js",["79","80","81"],[],"import React, { useState, useEffect } from \"react\";\nimport \"../styles/StudentForm.css\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function StudentForm() {\n  const [advisors, setAdvisors] = useState([]);\n  const [student, setStudent] = useState({});\n  const [inputStatus, setInputStatus] = useState(\"have Advisor\");\n  const [postData, setPostData] = useState({});\n  const [onSend, setOnSend] = useState(false);\n  const [resp, setResp] = useState({});\n  const [firstName, setFirstName] = useState();\n  const [familyName, setFamilyName] = useState();\n  const [academicYear, setAcademicYear] = useState();\n  const [email, setEmail] = useState();\n  const [tel, setTel] = useState();\n\n  const URL = \"http://localhost:5000\";\n  const path = window.location.pathname;\n  const pathArray = path.split(\"/\");\n  const status = [\n    \"no Advisor\",\n    \"have Advisor\",\n    \"done proposal exam\",\n    \"finished exam\",\n    \"graduated\",\n  ];\n\n  useEffect(() => {\n    // console.log(path);\n    async function fetchData() {\n      try {\n        const res = await fetch(`${URL}${path}`);\n        const data = await res.json();\n        setAdvisors((e) => data[\"advisors\"]);\n        setStudent((current) => data[\"student\"]);\n        // console.log(data[\"advisors\"], data.student);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (student) {\n      setInputStatus(student.status);\n      setFirstName(student.first_name);\n      setFamilyName(student.family_name);\n      setAcademicYear(student.academic_year);\n      setEmail(student.email);\n      setTel(student.tel);\n    }\n  }, [student]);\n\n  async function post(e) {\n    e.preventDefault();\n    const form = document.querySelector(\".form-data\");\n    const formData = new FormData(form);\n    const data = new URLSearchParams(formData);\n    setOnSend(true);\n    // console.log(\"data\", formData);\n    const res = await fetch(`${URL}${path}`, { method: \"POST\", body: data });\n    // console.log(res);\n    const resData = await res.json();\n    await setOnSend(false);\n    if (resData.errors) {\n      resData.errors.map(console.log);\n    } else {\n      setPostData(resData);\n    }\n  }\n\n  return (\n    <div className=\"student-form\">\n      {postData.url ? <Navigate to={`..${postData.url}`} /> : null}\n      <h1>\n        {pathArray.length === 3\n          ? `Create ${pathArray[1]}`\n          : `Update ${pathArray[1]}`}\n      </h1>\n      <form className=\"form-data\" onSubmit={post}>\n        <div className=\"form-row\">\n          <label htmlFor=\"id\">Student ID</label>\n          <input\n            id=\"id\"\n            type=\"text\"\n            name=\"id\"\n            value={student ? student.id : null}\n            minLength={10}\n            maxLength={10}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\" onSubmit={post}>\n          <label htmlFor=\"first-name\">First name</label>\n          <input\n            id=\"first-name\"\n            type=\"text\"\n            name=\"first_name\"\n            value={firstName}\n            onChange={(e) => {\n              setFirstName(e.target.value);\n            }}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"family-name\">Family name</label>\n          <input\n            id=\"family-name\"\n            type=\"text\"\n            name=\"family_name\"\n            value={familyName}\n            onChange={(e) => {\n              setFamilyName(e.target.value);\n            }}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"academic-year\">Academic year</label>\n          <input\n            id=\"academic-year\"\n            type=\"number\"\n            name=\"academic_year\"\n            value={academicYear}\n            onChange={(e) => {\n              setAcademicYear(e.target.value);\n            }}\n            min={0}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"tel\">Phone Number</label>\n          <input\n            id=\"tel\"\n            type=\"tel\"\n            name=\"tel\"\n            value={tel}\n            onChange={(e) => {\n              setTel(e.target.value);\n            }}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"status\">Status</label>\n          <select\n            id=\"status\"\n            name=\"status\"\n            onChange={(e) => {\n              setInputStatus(e.target.value);\n            }}\n          >\n            {student\n              ? status.map((e) => (\n                  <option value={e} selected={student.status === e}>\n                    {e}\n                  </option>\n                ))\n              : status.map((e) => (\n                  <option value={e} selected={e === \"have Advisor\"}>\n                    {e}\n                  </option>\n                ))}\n          </select>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"advisor\">Adivsor</label>\n          <select\n            id=\"advisor\"\n            name=\"advisor\"\n            disabled={inputStatus === \"no Advisor\"}\n          >\n            {student\n              ? advisors.map((e) => (\n                  <option\n                    value={e._id}\n                    selected={\"\" + student.advisor === \"\" + e._id}\n                    disabled={inputStatus === \"no Advisor\"}\n                  >\n                    {e.name}\n                  </option>\n                ))\n              : advisors.map((e) => (\n                  <option value={e._id} disabled={inputStatus === \"no Advisor\"}>\n                    {e.name}\n                  </option>\n                ))}\n          </select>\n        </div>\n        <div className=\"form-row\">\n          <button type=\"submit\" disabled={onSend}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/naratip74/odin-project/indiv/client/src/component/AdvisorForm.js",["82","83","84"],[],"import React, { useState, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nexport default function AdvisorForm() {\n  const [advisor, setAdvisor] = useState({});\n  const [inputStatus, setInputStatus] = useState(\"\");\n  const [postData, setPostData] = useState({});\n  const [onSend, setOnSend] = useState(false);\n  const [firstName, setFirstName] = useState();\n  const [familyName, setFamilyName] = useState();\n  const [email, setEmail] = useState();\n\n  const URL = \"http://localhost:5000\";\n  const path = window.location.pathname;\n  const pathArray = path.split(\"/\");\n  const status = [\n    \"Professor\",\n    \"Associate Professor\",\n    \"Assistant Professor\",\n    \"Lecturer\",\n  ];\n\n  useEffect(() => {\n    // console.log(path);\n    async function fetchData() {\n      const res = await fetch(`${URL}${path}`);\n      if (res.ok) {\n        const data = await res.json();\n        setAdvisor(data.advisor);\n      }\n    }\n    if (pathArray.length === 4) fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (advisor) {\n      setFirstName(advisor.first_name);\n      setFamilyName(advisor.family_name);\n      setEmail(advisor.email);\n    }\n  }, [advisor]);\n\n  async function post(e) {\n    e.preventDefault();\n    const form = document.querySelector(\".form-data\");\n    const formData = new FormData(form);\n    const data = new URLSearchParams(formData);\n    setOnSend(true);\n    const res = await fetch(`${URL}${path}`, { method: \"POST\", body: data });\n    // console.log(res);\n    const resData = await res.json();\n    await setOnSend(false);\n    if (resData.errors) {\n      resData.errors.map(console.log);\n    } else {\n      setPostData(resData.advisor);\n    }\n  }\n\n  return (\n    <div className=\"advisor-form\">\n      {postData.url ? <Navigate to={`..${postData.url}`} /> : null}\n      <h1>\n        {pathArray.length === 3\n          ? `Create ${pathArray[1]}`\n          : `Update ${pathArray[1]}`}\n      </h1>\n      <form className=\"form-data\" onSubmit={post}>\n        <div className=\"form-row\" onSubmit={post}>\n          <label htmlFor=\"first-name\">First name</label>\n          <input\n            id=\"first-name\"\n            type=\"text\"\n            name=\"first_name\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"family-name\">Family name</label>\n          <input\n            id=\"family-name\"\n            type=\"text\"\n            name=\"family_name\"\n            value={familyName}\n            onChange={(e) => setFamilyName(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"academic-title\">Academic title</label>\n          <select id=\"academic-title\" name=\"academic_title\">\n            {advisor.academic_title\n              ? status.map((e) => (\n                  <option value={e} selected={advisor.academic_title === e}>\n                    {e}\n                  </option>\n                ))\n              : status.map((e) => <option value={e}>{e}</option>)}\n          </select>\n        </div>\n        <div className=\"form-row\">\n          <button type=\"submit\" disabled={onSend}>\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/naratip74/odin-project/indiv/client/src/component/PublicationForm.js",["85"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function PublicationForm(props) {\n  const { setPublications } = props;\n  const [onSend, setOnSend] = useState(false);\n  const [title, setTitle] = useState();\n  const [url, setUrl] = useState();\n  const URL = \"http://localhost:5000\";\n  const { id } = useParams();\n\n  async function submit(e) {\n    e.preventDefault();\n    const form = document.querySelector(\".publication-form\");\n    const formData = new FormData(form);\n    const data = new URLSearchParams(formData);\n    setOnSend(true);\n    const res = await fetch(`${URL}/student/${id}/addPublication`, {\n      method: \"POST\",\n      body: data,\n    });\n    if (res.ok) {\n      const resData = await res.json();\n      // console.log(resData);\n      setPublications(resData);\n      setTitle(\"\");\n      setUrl(\"\");\n    }\n  }\n  return (\n    <form className=\"publication-form\" onSubmit={submit}>\n      <div className=\"form-row\">\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          id=\"title\"\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        ></input>\n      </div>\n      <div className=\"form-row\">\n        <label htmlFor=\"url\">url:</label>\n        <input\n          id=\"url\"\n          name=\"url\"\n          type=\"url\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          required\n        ></input>\n      </div>\n      <div className=\"form-row\">\n        <button type=\"submit\" disabled={onSend}>\n          Add\n        </button>\n      </div>\n    </form>\n  );\n}\n","/home/naratip74/odin-project/indiv/client/src/component/Stat.js",["86"],[],"import React, { useState, useEffect } from \"react\";\nimport Chart from \"./Chart\";\n\nexport default function Stat() {\n  const [label, setLabel] = useState(null);\n  const [dataSets, setDataSets] = useState(null);\n  const URL = \"http://localhost:5000\";\n  const path = window.location.pathname;\n  const pathArray = path.split(\"/\");\n  const [chartData, setChartData] = useState({\n    labels: null,\n    datasets: [\n      {\n        label: pathArray[2],\n        data: null,\n      },\n    ],\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(`${URL}${path}`);\n      const data = await res.json();\n      setLabel(Object.keys(data));\n      setDataSets(Object.values(data));\n    }\n    fetchData();\n  }, [path]);\n\n  useEffect(() => {\n    if (label) {\n      setChartData((e) => {\n        return { ...e, labels: label.filter((x) => x !== \"total\") };\n      });\n    }\n\n    if (dataSets) {\n      setChartData((e) => {\n        return {\n          ...e,\n          datasets: [\n            {\n              label: pathArray[2],\n              data: dataSets.slice(0, -1),\n            },\n          ],\n        };\n      });\n    }\n    // console.log(chartData);\n  }, [label, dataSets]);\n\n  return (\n    <div className=\"stat\">\n      <Chart chartData={chartData} />\n      {label && dataSets && pathArray[2] !== \"enroll\" ? (\n        <div>{dataSets[dataSets.length - 1]}</div>\n      ) : null}\n    </div>\n  );\n}\n","/home/naratip74/odin-project/indiv/client/src/component/Chart.js",["87"],[],{"ruleId":"88","severity":1,"message":"89","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":20},{"ruleId":"88","severity":1,"message":"92","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":27,"column":6,"nodeType":"95","endLine":27,"endColumn":8,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"94","line":24,"column":6,"nodeType":"95","endLine":24,"endColumn":8,"suggestions":"97"},{"ruleId":"88","severity":1,"message":"98","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":14},{"ruleId":"88","severity":1,"message":"99","line":11,"column":16,"nodeType":"90","messageId":"91","endLine":11,"endColumn":23},{"ruleId":"93","severity":1,"message":"100","line":43,"column":6,"nodeType":"95","endLine":43,"endColumn":8,"suggestions":"101"},{"ruleId":"88","severity":1,"message":"102","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":21},{"ruleId":"88","severity":1,"message":"103","line":6,"column":23,"nodeType":"90","messageId":"91","endLine":6,"endColumn":37},{"ruleId":"93","severity":1,"message":"104","line":33,"column":6,"nodeType":"95","endLine":33,"endColumn":8,"suggestions":"105"},{"ruleId":"88","severity":1,"message":"106","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"107","line":51,"column":6,"nodeType":"95","endLine":51,"endColumn":23,"suggestions":"108"},{"ruleId":"88","severity":1,"message":"109","line":2,"column":19,"nodeType":"90","messageId":"91","endLine":2,"endColumn":26},"no-unused-vars","'StudentsList' is defined but never used.","Identifier","unusedVar","'AdvisorList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["110"],["111"],"'resp' is assigned a value but never used.","'setResp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.",["112"],"'inputStatus' is assigned a value but never used.","'setInputStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'path' and 'pathArray.length'. Either include them or remove the dependency array.",["113"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'pathArray'. Either include it or remove the dependency array.",["114"],"'ChartJS' is defined but never used.",{"desc":"115","fix":"116"},{"desc":"115","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [id]",{"range":"124","text":"125"},{"range":"126","text":"125"},"Update the dependencies array to be: [path]",{"range":"127","text":"128"},"Update the dependencies array to be: [path, pathArray.length]",{"range":"129","text":"130"},"Update the dependencies array to be: [label, dataSets, pathArray]",{"range":"131","text":"132"},[827,829],"[id]",[757,759],[1358,1360],"[path]",[985,987],"[path, pathArray.length]",[1175,1192],"[label, dataSets, pathArray]"]